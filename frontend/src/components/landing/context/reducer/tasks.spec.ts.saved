import { arbitrumSepolia } from 'viem/chains';
import { HTTP_STATUS } from '~/lib/constants';
import { handleCreditDataRequest } from './credit';
import { generateInitialState } from './index';
import { type InitialLandingState } from '../types';

describe('views/landing/context/reducer/credit', () => {
  describe('handleCreditDataRequest', () => {
    it('should update credit fetch status to LOADING and clear errors', () => {
      // Mock initial state
      const initialState: InitialLandingState = generateInitialState({
        chainid: arbitrumSepolia.id,
      });

      // Invoke the function with the mock state
      const newState = handleCreditDataRequest(initialState);

      // Assert that the fetchStatus of credit is set to LOADING
      expect(newState.credit.fetchStatus).toBe(HTTP_STATUS.LOADING);

      // Assert that errors of credit are cleared
      expect(newState.credit.errors).toBeNull();

      // You can add more assertions based on your specific state structure
    });
  });
});
